# Generated by Django 5.0.1 on 2024-01-11 17:43

import django.contrib.postgres.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('create', 'create'), ('update', 'update'), ('patch', 'patch'), ('delete', 'delete'), ('retrieve', 'retrieve'), ('list', 'list'), ('read_only', 'read_only'), ('no_delete', 'no_delete'), ('all', 'all')], max_length=15), size=9)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_type_permissions', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('user', 'user'), ('admin', 'admin'), ('super_admin', 'super_admin')], max_length=11)),
                ('type_permissions', models.ManyToManyField(blank=True, related_name='user_types', to='users.custompermission')),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('phone_number', models.CharField(max_length=11, unique=True)),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='users', to='users.custompermission')),
                ('user_types', models.ManyToManyField(related_name='users', to='users.usertype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
